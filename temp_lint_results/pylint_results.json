[
    {
        "type": "error",
        "module": "coverpage",
        "obj": "",
        "line": 53,
        "column": 3,
        "endLine": null,
        "endColumn": null,
        "path": "../../../../usr/libexec/fax/coverpage.py",
        "symbol": "syntax-error",
        "message": "Parsing failed: 'Missing parentheses in call to 'print'. Did you mean print(...)? (coverpage, line 53)'",
        "message-id": "E0001"
    }
]
[
    {
        "type": "convention",
        "module": "filevault",
        "obj": "",
        "line": 83,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "/usr/libexec/feedback/filevault.py",
        "symbol": "line-too-long",
        "message": "Line too long (165/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "filevault",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "/usr/libexec/feedback/filevault.py",
        "symbol": "missing-module-docstring",
        "message": "Missing module docstring",
        "message-id": "C0114"
    },
    {
        "type": "convention",
        "module": "filevault",
        "obj": "",
        "line": 11,
        "column": 0,
        "endLine": 11,
        "endColumn": 40,
        "path": "/usr/libexec/feedback/filevault.py",
        "symbol": "invalid-name",
        "message": "Constant name \"kCoreStorageLogicalVolumeConversionState\" doesn't conform to UPPER_CASE naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "filevault",
        "obj": "",
        "line": 12,
        "column": 0,
        "endLine": 12,
        "endColumn": 45,
        "path": "/usr/libexec/feedback/filevault.py",
        "symbol": "invalid-name",
        "message": "Constant name \"kCoreStorageLogicalVolumeFamilyEncryptionType\" doesn't conform to UPPER_CASE naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "filevault",
        "obj": "",
        "line": 13,
        "column": 0,
        "endLine": 13,
        "endColumn": 31,
        "path": "/usr/libexec/feedback/filevault.py",
        "symbol": "invalid-name",
        "message": "Constant name \"kCoreStorageLogicalVolumeSparse\" doesn't conform to UPPER_CASE naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "filevault",
        "obj": "",
        "line": 14,
        "column": 0,
        "endLine": 14,
        "endColumn": 39,
        "path": "/usr/libexec/feedback/filevault.py",
        "symbol": "invalid-name",
        "message": "Constant name \"kMemberOfCoreStorageLogicalVolumeFamily\" doesn't conform to UPPER_CASE naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "filevault",
        "obj": "",
        "line": 15,
        "column": 0,
        "endLine": 15,
        "endColumn": 38,
        "path": "/usr/libexec/feedback/filevault.py",
        "symbol": "invalid-name",
        "message": "Constant name \"kMemberOfCoreStorageLogicalVolumeGroup\" doesn't conform to UPPER_CASE naming style",
        "message-id": "C0103"
    },
    {
        "type": "warning",
        "module": "filevault",
        "obj": "_diskutil_cs_info",
        "line": 21,
        "column": 4,
        "endLine": 21,
        "endColumn": 43,
        "path": "/usr/libexec/feedback/filevault.py",
        "symbol": "expression-not-assigned",
        "message": "Expression \"cmd.append('-plist') if plist else None\" is assigned to nothing",
        "message-id": "W0106"
    },
    {
        "type": "warning",
        "module": "filevault",
        "obj": "_diskutil_cs_info",
        "line": 22,
        "column": 4,
        "endLine": 22,
        "endColumn": 70,
        "path": "/usr/libexec/feedback/filevault.py",
        "symbol": "expression-not-assigned",
        "message": "Expression \"cmd.append(target) if isinstance(target, (str, unicode)) else None\" is assigned to nothing",
        "message-id": "W0106"
    },
    {
        "type": "error",
        "module": "filevault",
        "obj": "_diskutil_cs_info",
        "line": 22,
        "column": 51,
        "endLine": 22,
        "endColumn": 58,
        "path": "/usr/libexec/feedback/filevault.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable 'unicode'",
        "message-id": "E0602"
    },
    {
        "type": "warning",
        "module": "filevault",
        "obj": "_diskutil_cs_info",
        "line": 25,
        "column": 11,
        "endLine": 25,
        "endColumn": 20,
        "path": "/usr/libexec/feedback/filevault.py",
        "symbol": "broad-exception-caught",
        "message": "Catching too general exception Exception",
        "message-id": "W0718"
    },
    {
        "type": "error",
        "module": "filevault",
        "obj": "_diskutil_cs_info",
        "line": 28,
        "column": 11,
        "endLine": 28,
        "endColumn": 39,
        "path": "/usr/libexec/feedback/filevault.py",
        "symbol": "no-member",
        "message": "Module 'plistlib' has no 'readPlistFromString' member",
        "message-id": "E1101"
    },
    {
        "type": "warning",
        "module": "filevault",
        "obj": "_diskutil_cs_list",
        "line": 33,
        "column": 4,
        "endLine": 33,
        "endColumn": 43,
        "path": "/usr/libexec/feedback/filevault.py",
        "symbol": "expression-not-assigned",
        "message": "Expression \"cmd.append('-plist') if plist else None\" is assigned to nothing",
        "message-id": "W0106"
    },
    {
        "type": "warning",
        "module": "filevault",
        "obj": "_diskutil_cs_list",
        "line": 36,
        "column": 11,
        "endLine": 36,
        "endColumn": 20,
        "path": "/usr/libexec/feedback/filevault.py",
        "symbol": "broad-exception-caught",
        "message": "Catching too general exception Exception",
        "message-id": "W0718"
    },
    {
        "type": "error",
        "module": "filevault",
        "obj": "_diskutil_cs_list",
        "line": 39,
        "column": 11,
        "endLine": 39,
        "endColumn": 39,
        "path": "/usr/libexec/feedback/filevault.py",
        "symbol": "no-member",
        "message": "Module 'plistlib' has no 'readPlistFromString' member",
        "message-id": "E1101"
    },
    {
        "type": "warning",
        "module": "filevault",
        "obj": "_diskutil_list",
        "line": 44,
        "column": 4,
        "endLine": 44,
        "endColumn": 43,
        "path": "/usr/libexec/feedback/filevault.py",
        "symbol": "expression-not-assigned",
        "message": "Expression \"cmd.append('-plist') if plist else None\" is assigned to nothing",
        "message-id": "W0106"
    },
    {
        "type": "warning",
        "module": "filevault",
        "obj": "_diskutil_list",
        "line": 47,
        "column": 11,
        "endLine": 47,
        "endColumn": 20,
        "path": "/usr/libexec/feedback/filevault.py",
        "symbol": "broad-exception-caught",
        "message": "Catching too general exception Exception",
        "message-id": "W0718"
    },
    {
        "type": "error",
        "module": "filevault",
        "obj": "_diskutil_list",
        "line": 50,
        "column": 11,
        "endLine": 50,
        "endColumn": 39,
        "path": "/usr/libexec/feedback/filevault.py",
        "symbol": "no-member",
        "message": "Module 'plistlib' has no 'readPlistFromString' member",
        "message-id": "E1101"
    },
    {
        "type": "convention",
        "module": "filevault",
        "obj": "is_fv_sparse",
        "line": 53,
        "column": 0,
        "endLine": 53,
        "endColumn": 16,
        "path": "/usr/libexec/feedback/filevault.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "warning",
        "module": "filevault",
        "obj": "is_fv_sparse",
        "line": 59,
        "column": 11,
        "endLine": 59,
        "endColumn": 20,
        "path": "/usr/libexec/feedback/filevault.py",
        "symbol": "broad-exception-caught",
        "message": "Catching too general exception Exception",
        "message-id": "W0718"
    },
    {
        "type": "convention",
        "module": "filevault",
        "obj": "is_fv_finised",
        "line": 63,
        "column": 0,
        "endLine": 63,
        "endColumn": 17,
        "path": "/usr/libexec/feedback/filevault.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "warning",
        "module": "filevault",
        "obj": "is_fv_finised",
        "line": 67,
        "column": 11,
        "endLine": 67,
        "endColumn": 20,
        "path": "/usr/libexec/feedback/filevault.py",
        "symbol": "broad-exception-caught",
        "message": "Catching too general exception Exception",
        "message-id": "W0718"
    },
    {
        "type": "convention",
        "module": "filevault",
        "obj": "is_fv_turned_on",
        "line": 71,
        "column": 0,
        "endLine": 71,
        "endColumn": 19,
        "path": "/usr/libexec/feedback/filevault.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "warning",
        "module": "filevault",
        "obj": "is_fv_turned_on",
        "line": 77,
        "column": 11,
        "endLine": 77,
        "endColumn": 20,
        "path": "/usr/libexec/feedback/filevault.py",
        "symbol": "broad-exception-caught",
        "message": "Catching too general exception Exception",
        "message-id": "W0718"
    },
    {
        "type": "convention",
        "module": "filevault",
        "obj": "was_fv_adopted_at_macbuddy",
        "line": 81,
        "column": 0,
        "endLine": 81,
        "endColumn": 30,
        "path": "/usr/libexec/feedback/filevault.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "warning",
        "module": "filevault",
        "obj": "was_fv_adopted_at_macbuddy",
        "line": 87,
        "column": 11,
        "endLine": 87,
        "endColumn": 20,
        "path": "/usr/libexec/feedback/filevault.py",
        "symbol": "broad-exception-caught",
        "message": "Catching too general exception Exception",
        "message-id": "W0718"
    },
    {
        "type": "error",
        "module": "filevault",
        "obj": "was_fv_adopted_at_macbuddy",
        "line": 84,
        "column": 15,
        "endLine": 84,
        "endColumn": 43,
        "path": "/usr/libexec/feedback/filevault.py",
        "symbol": "no-member",
        "message": "Module 'plistlib' has no 'readPlistFromString' member",
        "message-id": "E1101"
    },
    {
        "type": "warning",
        "module": "filevault",
        "obj": "",
        "line": 103,
        "column": 11,
        "endLine": 103,
        "endColumn": 20,
        "path": "/usr/libexec/feedback/filevault.py",
        "symbol": "broad-exception-caught",
        "message": "Catching too general exception Exception",
        "message-id": "W0718"
    }
]
[
    {
        "type": "convention",
        "module": "appearance",
        "obj": "",
        "line": 28,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "/usr/libexec/feedback/appearance.py",
        "symbol": "missing-final-newline",
        "message": "Final newline missing",
        "message-id": "C0304"
    },
    {
        "type": "convention",
        "module": "appearance",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "/usr/libexec/feedback/appearance.py",
        "symbol": "missing-module-docstring",
        "message": "Missing module docstring",
        "message-id": "C0114"
    },
    {
        "type": "error",
        "module": "appearance",
        "obj": "",
        "line": 4,
        "column": 0,
        "endLine": 4,
        "endColumn": 23,
        "path": "/usr/libexec/feedback/appearance.py",
        "symbol": "import-error",
        "message": "Unable to import 'Foundation'",
        "message-id": "E0401"
    },
    {
        "type": "convention",
        "module": "appearance",
        "obj": "",
        "line": 8,
        "column": 0,
        "endLine": 8,
        "endColumn": 3,
        "path": "/usr/libexec/feedback/appearance.py",
        "symbol": "invalid-name",
        "message": "Constant name \"out\" doesn't conform to UPPER_CASE naming style",
        "message-id": "C0103"
    },
    {
        "type": "warning",
        "module": "appearance",
        "obj": "",
        "line": 25,
        "column": 7,
        "endLine": 25,
        "endColumn": 16,
        "path": "/usr/libexec/feedback/appearance.py",
        "symbol": "broad-exception-caught",
        "message": "Catching too general exception Exception",
        "message-id": "W0718"
    },
    {
        "type": "warning",
        "module": "appearance",
        "obj": "",
        "line": 12,
        "column": 56,
        "endLine": null,
        "endColumn": null,
        "path": "/usr/libexec/feedback/appearance.py",
        "symbol": "redundant-u-string-prefix",
        "message": "The u prefix for strings is no longer necessary in Python >=3.0",
        "message-id": "W1406"
    },
    {
        "type": "warning",
        "module": "appearance",
        "obj": "",
        "line": 15,
        "column": 78,
        "endLine": null,
        "endColumn": null,
        "path": "/usr/libexec/feedback/appearance.py",
        "symbol": "redundant-u-string-prefix",
        "message": "The u prefix for strings is no longer necessary in Python >=3.0",
        "message-id": "W1406"
    },
    {
        "type": "convention",
        "module": "appearance",
        "obj": "",
        "line": 5,
        "column": 0,
        "endLine": 5,
        "endColumn": 11,
        "path": "/usr/libexec/feedback/appearance.py",
        "symbol": "wrong-import-order",
        "message": "standard import \"json\" should be placed before third party import \"Foundation\"",
        "message-id": "C0411"
    },
    {
        "type": "convention",
        "module": "appearance",
        "obj": "",
        "line": 6,
        "column": 0,
        "endLine": 6,
        "endColumn": 10,
        "path": "/usr/libexec/feedback/appearance.py",
        "symbol": "wrong-import-order",
        "message": "standard import \"sys\" should be placed before third party import \"Foundation\"",
        "message-id": "C0411"
    }
]
[
    {
        "type": "convention",
        "module": "gyp_main",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "/usr/local/lib/node_modules/npm/node_modules/node-gyp/gyp/gyp_main.py",
        "symbol": "missing-module-docstring",
        "message": "Missing module docstring",
        "message-id": "C0114"
    },
    {
        "type": "convention",
        "module": "gyp_main",
        "obj": "IsCygwin",
        "line": 12,
        "column": 0,
        "endLine": 12,
        "endColumn": 12,
        "path": "/usr/local/lib/node_modules/npm/node_modules/node-gyp/gyp/gyp_main.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "gyp_main",
        "obj": "IsCygwin",
        "line": 12,
        "column": 0,
        "endLine": 12,
        "endColumn": 12,
        "path": "/usr/local/lib/node_modules/npm/node_modules/node-gyp/gyp/gyp_main.py",
        "symbol": "invalid-name",
        "message": "Function name \"IsCygwin\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "warning",
        "module": "gyp_main",
        "obj": "IsCygwin",
        "line": 20,
        "column": 11,
        "endLine": 20,
        "endColumn": 20,
        "path": "/usr/local/lib/node_modules/npm/node_modules/node-gyp/gyp/gyp_main.py",
        "symbol": "broad-exception-caught",
        "message": "Catching too general exception Exception",
        "message-id": "W0718"
    },
    {
        "type": "refactor",
        "module": "gyp_main",
        "obj": "IsCygwin",
        "line": 15,
        "column": 14,
        "endLine": 17,
        "endColumn": 9,
        "path": "/usr/local/lib/node_modules/npm/node_modules/node-gyp/gyp/gyp_main.py",
        "symbol": "consider-using-with",
        "message": "Consider using 'with' for resource-allocating operations",
        "message-id": "R1732"
    },
    {
        "type": "convention",
        "module": "gyp_main",
        "obj": "UnixifyPath",
        "line": 24,
        "column": 0,
        "endLine": 24,
        "endColumn": 15,
        "path": "/usr/local/lib/node_modules/npm/node_modules/node-gyp/gyp/gyp_main.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "gyp_main",
        "obj": "UnixifyPath",
        "line": 24,
        "column": 0,
        "endLine": 24,
        "endColumn": 15,
        "path": "/usr/local/lib/node_modules/npm/node_modules/node-gyp/gyp/gyp_main.py",
        "symbol": "invalid-name",
        "message": "Function name \"UnixifyPath\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "warning",
        "module": "gyp_main",
        "obj": "UnixifyPath",
        "line": 24,
        "column": 16,
        "endLine": 24,
        "endColumn": 20,
        "path": "/usr/local/lib/node_modules/npm/node_modules/node-gyp/gyp/gyp_main.py",
        "symbol": "redefined-outer-name",
        "message": "Redefining name 'path' from outer scope (line 40)",
        "message-id": "W0621"
    },
    {
        "type": "warning",
        "module": "gyp_main",
        "obj": "UnixifyPath",
        "line": 33,
        "column": 11,
        "endLine": 33,
        "endColumn": 20,
        "path": "/usr/local/lib/node_modules/npm/node_modules/node-gyp/gyp/gyp_main.py",
        "symbol": "broad-exception-caught",
        "message": "Catching too general exception Exception",
        "message-id": "W0718"
    },
    {
        "type": "refactor",
        "module": "gyp_main",
        "obj": "UnixifyPath",
        "line": 28,
        "column": 14,
        "endLine": 30,
        "endColumn": 9,
        "path": "/usr/local/lib/node_modules/npm/node_modules/node-gyp/gyp/gyp_main.py",
        "symbol": "consider-using-with",
        "message": "Consider using 'with' for resource-allocating operations",
        "message-id": "R1732"
    },
    {
        "type": "error",
        "module": "gyp_main",
        "obj": "",
        "line": 42,
        "column": 0,
        "endLine": 42,
        "endColumn": 10,
        "path": "/usr/local/lib/node_modules/npm/node_modules/node-gyp/gyp/gyp_main.py",
        "symbol": "import-error",
        "message": "Unable to import 'gyp'",
        "message-id": "E0401"
    },
    {
        "type": "convention",
        "module": "gyp_main",
        "obj": "",
        "line": 42,
        "column": 0,
        "endLine": 42,
        "endColumn": 10,
        "path": "/usr/local/lib/node_modules/npm/node_modules/node-gyp/gyp/gyp_main.py",
        "symbol": "wrong-import-position",
        "message": "Import \"import gyp\" should be placed at the top of the module",
        "message-id": "C0413"
    }
]
[
    {
        "type": "warning",
        "module": "packaging.tags",
        "obj": "",
        "line": 364,
        "column": 9,
        "endLine": null,
        "endColumn": null,
        "path": "/usr/local/lib/node_modules/npm/node_modules/node-gyp/gyp/pylib/packaging/tags.py",
        "symbol": "fixme",
        "message": "TODO: Need to care about 32-bit PPC for ppc64 through 10.2?",
        "message-id": "W0511"
    },
    {
        "type": "convention",
        "module": "packaging.tags",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "/usr/local/lib/node_modules/npm/node_modules/node-gyp/gyp/pylib/packaging/tags.py",
        "symbol": "missing-module-docstring",
        "message": "Missing module docstring",
        "message-id": "C0114"
    },
    {
        "type": "warning",
        "module": "packaging.tags",
        "obj": "Tag.__init__",
        "line": 54,
        "column": 51,
        "endLine": 54,
        "endColumn": 64,
        "path": "/usr/local/lib/node_modules/npm/node_modules/node-gyp/gyp/pylib/packaging/tags.py",
        "symbol": "redefined-outer-name",
        "message": "Redefining name 'platform' from outer scope (line 6)",
        "message-id": "W0621"
    },
    {
        "type": "convention",
        "module": "packaging.tags",
        "obj": "Tag.interpreter",
        "line": 66,
        "column": 4,
        "endLine": 66,
        "endColumn": 19,
        "path": "/usr/local/lib/node_modules/npm/node_modules/node-gyp/gyp/pylib/packaging/tags.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "packaging.tags",
        "obj": "Tag.abi",
        "line": 70,
        "column": 4,
        "endLine": 70,
        "endColumn": 11,
        "path": "/usr/local/lib/node_modules/npm/node_modules/node-gyp/gyp/pylib/packaging/tags.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "packaging.tags",
        "obj": "Tag.platform",
        "line": 74,
        "column": 4,
        "endLine": 74,
        "endColumn": 16,
        "path": "/usr/local/lib/node_modules/npm/node_modules/node-gyp/gyp/pylib/packaging/tags.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "packaging.tags",
        "obj": "_cpython_abis",
        "line": 165,
        "column": 8,
        "endLine": 165,
        "endColumn": 44,
        "path": "/usr/local/lib/node_modules/npm/node_modules/node-gyp/gyp/pylib/packaging/tags.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "packaging.tags",
        "obj": "cpython_tags",
        "line": 223,
        "column": 30,
        "endLine": 223,
        "endColumn": 43,
        "path": "/usr/local/lib/node_modules/npm/node_modules/node-gyp/gyp/pylib/packaging/tags.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "warning",
        "module": "packaging.tags",
        "obj": "mac_platforms",
        "line": 414,
        "column": 8,
        "endLine": 414,
        "endColumn": 15,
        "path": "/usr/local/lib/node_modules/npm/node_modules/node-gyp/gyp/pylib/packaging/tags.py",
        "symbol": "self-assigning-variable",
        "message": "Assigning the same variable 'version' to itself",
        "message-id": "W0127"
    },
    {
        "type": "warning",
        "module": "packaging.tags",
        "obj": "mac_platforms",
        "line": 418,
        "column": 8,
        "endLine": 418,
        "endColumn": 12,
        "path": "/usr/local/lib/node_modules/npm/node_modules/node-gyp/gyp/pylib/packaging/tags.py",
        "symbol": "self-assigning-variable",
        "message": "Assigning the same variable 'arch' to itself",
        "message-id": "W0127"
    },
    {
        "type": "refactor",
        "module": "packaging.tags",
        "obj": "mac_platforms",
        "line": 420,
        "column": 7,
        "endLine": 420,
        "endColumn": 47,
        "path": "/usr/local/lib/node_modules/npm/node_modules/node-gyp/gyp/pylib/packaging/tags.py",
        "symbol": "chained-comparison",
        "message": "Simplify chained comparison between the operands",
        "message-id": "R1716"
    },
    {
        "type": "convention",
        "module": "packaging.tags",
        "obj": "mac_platforms",
        "line": 427,
        "column": 22,
        "endLine": 427,
        "endColumn": 62,
        "path": "/usr/local/lib/node_modules/npm/node_modules/node-gyp/gyp/pylib/packaging/tags.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "packaging.tags",
        "obj": "mac_platforms",
        "line": 438,
        "column": 22,
        "endLine": 438,
        "endColumn": 62,
        "path": "/usr/local/lib/node_modules/npm/node_modules/node-gyp/gyp/pylib/packaging/tags.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "packaging.tags",
        "obj": "mac_platforms",
        "line": 455,
        "column": 26,
        "endLine": 455,
        "endColumn": 66,
        "path": "/usr/local/lib/node_modules/npm/node_modules/node-gyp/gyp/pylib/packaging/tags.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "packaging.tags",
        "obj": "mac_platforms",
        "line": 464,
        "column": 22,
        "endLine": 464,
        "endColumn": 62,
        "path": "/usr/local/lib/node_modules/npm/node_modules/node-gyp/gyp/pylib/packaging/tags.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "refactor",
        "module": "packaging.tags",
        "obj": "mac_platforms",
        "line": 383,
        "column": 0,
        "endLine": 383,
        "endColumn": 17,
        "path": "/usr/local/lib/node_modules/npm/node_modules/node-gyp/gyp/pylib/packaging/tags.py",
        "symbol": "too-many-branches",
        "message": "Too many branches (17/12)",
        "message-id": "R0912"
    },
    {
        "type": "refactor",
        "module": "packaging.tags",
        "obj": "platform_tags",
        "line": 498,
        "column": 4,
        "endLine": 503,
        "endColumn": 35,
        "path": "/usr/local/lib/node_modules/npm/node_modules/node-gyp/gyp/pylib/packaging/tags.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"elif\" after \"return\", remove the leading \"el\" from \"elif\"",
        "message-id": "R1705"
    }
]
[
    {
        "type": "warning",
        "module": "packaging._musllinux",
        "obj": "_get_musl_version",
        "line": 50,
        "column": 11,
        "endLine": 50,
        "endColumn": 66,
        "path": "/usr/local/lib/node_modules/npm/node_modules/node-gyp/gyp/pylib/packaging/_musllinux.py",
        "symbol": "subprocess-run-check",
        "message": "'subprocess.run' used without explicitly defining the value for 'check'.",
        "message-id": "W1510"
    }
]
[
    {
        "type": "warning",
        "module": "packaging.metadata",
        "obj": "",
        "line": 217,
        "column": 9,
        "endLine": null,
        "endColumn": null,
        "path": "/usr/local/lib/node_modules/npm/node_modules/node-gyp/gyp/pylib/packaging/metadata.py",
        "symbol": "fixme",
        "message": "TODO: The spec doesn't say anything about if the keys should be",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "packaging.metadata",
        "obj": "",
        "line": 774,
        "column": 60,
        "endLine": null,
        "endColumn": null,
        "path": "/usr/local/lib/node_modules/npm/node_modules/node-gyp/gyp/pylib/packaging/metadata.py",
        "symbol": "fixme",
        "message": "TODO 2.1: can be in body",
        "message-id": "W0511"
    },
    {
        "type": "convention",
        "module": "packaging.metadata",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "/usr/local/lib/node_modules/npm/node_modules/node-gyp/gyp/pylib/packaging/metadata.py",
        "symbol": "missing-module-docstring",
        "message": "Missing module docstring",
        "message-id": "C0114"
    },
    {
        "type": "warning",
        "module": "packaging.metadata",
        "obj": "ExceptionGroup",
        "line": 47,
        "column": 4,
        "endLine": 47,
        "endColumn": 24,
        "path": "/usr/local/lib/node_modules/npm/node_modules/node-gyp/gyp/pylib/packaging/metadata.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'ExceptionGroup'",
        "message-id": "W0622"
    },
    {
        "type": "convention",
        "module": "packaging.metadata",
        "obj": "Literal",
        "line": 34,
        "column": 12,
        "endLine": 34,
        "endColumn": 25,
        "path": "/usr/local/lib/node_modules/npm/node_modules/node-gyp/gyp/pylib/packaging/metadata.py",
        "symbol": "missing-class-docstring",
        "message": "Missing class docstring",
        "message-id": "C0115"
    },
    {
        "type": "convention",
        "module": "packaging.metadata",
        "obj": "Literal.__init_subclass__",
        "line": 35,
        "column": 16,
        "endLine": 35,
        "endColumn": 37,
        "path": "/usr/local/lib/node_modules/npm/node_modules/node-gyp/gyp/pylib/packaging/metadata.py",
        "symbol": "bad-classmethod-argument",
        "message": "Class method __init_subclass__ should have 'cls' as first argument",
        "message-id": "C0202"
    },
    {
        "type": "refactor",
        "module": "packaging.metadata",
        "obj": "Literal",
        "line": 34,
        "column": 12,
        "endLine": 34,
        "endColumn": 25,
        "path": "/usr/local/lib/node_modules/npm/node_modules/node-gyp/gyp/pylib/packaging/metadata.py",
        "symbol": "too-few-public-methods",
        "message": "Too few public methods (0/2)",
        "message-id": "R0903"
    },
    {
        "type": "convention",
        "module": "packaging.metadata",
        "obj": "TypedDict",
        "line": 38,
        "column": 12,
        "endLine": 38,
        "endColumn": 27,
        "path": "/usr/local/lib/node_modules/npm/node_modules/node-gyp/gyp/pylib/packaging/metadata.py",
        "symbol": "missing-class-docstring",
        "message": "Missing class docstring",
        "message-id": "C0115"
    },
    {
        "type": "convention",
        "module": "packaging.metadata",
        "obj": "TypedDict.__init_subclass__",
        "line": 39,
        "column": 16,
        "endLine": 39,
        "endColumn": 37,
        "path": "/usr/local/lib/node_modules/npm/node_modules/node-gyp/gyp/pylib/packaging/metadata.py",
        "symbol": "bad-classmethod-argument",
        "message": "Class method __init_subclass__ should have 'cls' as first argument",
        "message-id": "C0202"
    },
    {
        "type": "refactor",
        "module": "packaging.metadata",
        "obj": "TypedDict",
        "line": 38,
        "column": 12,
        "endLine": 38,
        "endColumn": 27,
        "path": "/usr/local/lib/node_modules/npm/node_modules/node-gyp/gyp/pylib/packaging/metadata.py",
        "symbol": "too-few-public-methods",
        "message": "Too few public methods (0/2)",
        "message-id": "R0903"
    },
    {
        "type": "warning",
        "module": "packaging.metadata",
        "obj": "",
        "line": 65,
        "column": 4,
        "endLine": 65,
        "endColumn": 18,
        "path": "/usr/local/lib/node_modules/npm/node_modules/node-gyp/gyp/pylib/packaging/metadata.py",
        "symbol": "self-assigning-variable",
        "message": "Assigning the same variable 'ExceptionGroup' to itself",
        "message-id": "W0127"
    },
    {
        "type": "refactor",
        "module": "packaging.metadata",
        "obj": "_get_payload",
        "line": 237,
        "column": 4,
        "endLine": 247,
        "endColumn": 62,
        "path": "/usr/local/lib/node_modules/npm/node_modules/node-gyp/gyp/pylib/packaging/metadata.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "warning",
        "module": "packaging.metadata",
        "obj": "_get_payload",
        "line": 247,
        "column": 12,
        "endLine": 247,
        "endColumn": 62,
        "path": "/usr/local/lib/node_modules/npm/node_modules/node-gyp/gyp/pylib/packaging/metadata.py",
        "symbol": "raise-missing-from",
        "message": "Consider explicitly re-raising using 'except UnicodeDecodeError as exc' and 'raise ValueError('payload in an invalid encoding') from exc'",
        "message-id": "W0707"
    },
    {
        "type": "warning",
        "module": "packaging.metadata",
        "obj": "parse_email",
        "line": 361,
        "column": 20,
        "endLine": 361,
        "endColumn": 23,
        "path": "/usr/local/lib/node_modules/npm/node_modules/node-gyp/gyp/pylib/packaging/metadata.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'bin'",
        "message-id": "W0622"
    },
    {
        "type": "refactor",
        "module": "packaging.metadata",
        "obj": "parse_email",
        "line": 295,
        "column": 0,
        "endLine": 295,
        "endColumn": 15,
        "path": "/usr/local/lib/node_modules/npm/node_modules/node-gyp/gyp/pylib/packaging/metadata.py",
        "symbol": "too-many-branches",
        "message": "Too many branches (23/12)",
        "message-id": "R0912"
    },
    {
        "type": "refactor",
        "module": "packaging.metadata",
        "obj": "parse_email",
        "line": 295,
        "column": 0,
        "endLine": 295,
        "endColumn": 15,
        "path": "/usr/local/lib/node_modules/npm/node_modules/node-gyp/gyp/pylib/packaging/metadata.py",
        "symbol": "too-many-statements",
        "message": "Too many statements (58/50)",
        "message-id": "R0915"
    },
    {
        "type": "refactor",
        "module": "packaging.metadata",
        "obj": "_Validator._process_name",
        "line": 552,
        "column": 8,
        "endLine": 559,
        "endColumn": 24,
        "path": "/usr/local/lib/node_modules/npm/node_modules/node-gyp/gyp/pylib/packaging/metadata.py",
        "symbol": "no-else-raise",
        "message": "Unnecessary \"else\" after \"raise\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1720"
    },
    {
        "type": "refactor",
        "module": "packaging.metadata",
        "obj": "_Validator._process_dynamic",
        "line": 611,
        "column": 12,
        "endLine": 616,
        "endColumn": 87,
        "path": "/usr/local/lib/node_modules/npm/node_modules/node-gyp/gyp/pylib/packaging/metadata.py",
        "symbol": "no-else-raise",
        "message": "Unnecessary \"elif\" after \"raise\", remove the leading \"el\" from \"elif\"",
        "message-id": "R1720"
    },
    {
        "type": "refactor",
        "module": "packaging.metadata",
        "obj": "_Validator._process_provides_extra",
        "line": 624,
        "column": 8,
        "endLine": 632,
        "endColumn": 35,
        "path": "/usr/local/lib/node_modules/npm/node_modules/node-gyp/gyp/pylib/packaging/metadata.py",
        "symbol": "no-else-raise",
        "message": "Unnecessary \"else\" after \"raise\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1720"
    },
    {
        "type": "refactor",
        "module": "packaging.metadata",
        "obj": "_Validator._process_requires_dist",
        "line": 647,
        "column": 8,
        "endLine": 653,
        "endColumn": 23,
        "path": "/usr/local/lib/node_modules/npm/node_modules/node-gyp/gyp/pylib/packaging/metadata.py",
        "symbol": "no-else-raise",
        "message": "Unnecessary \"else\" after \"raise\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1720"
    },
    {
        "type": "refactor",
        "module": "packaging.metadata",
        "obj": "_Validator",
        "line": 481,
        "column": 0,
        "endLine": 481,
        "endColumn": 16,
        "path": "/usr/local/lib/node_modules/npm/node_modules/node-gyp/gyp/pylib/packaging/metadata.py",
        "symbol": "too-few-public-methods",
        "message": "Too few public methods (1/2)",
        "message-id": "R0903"
    }
]
[
    {
        "type": "refactor",
        "module": "packaging.version",
        "obj": "Version.local",
        "line": 338,
        "column": 8,
        "endLine": 341,
        "endColumn": 23,
        "path": "/usr/local/lib/node_modules/npm/node_modules/node-gyp/gyp/pylib/packaging/version.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "packaging.version",
        "obj": "_cmpkey",
        "line": 503,
        "column": 0,
        "endLine": 503,
        "endColumn": 11,
        "path": "/usr/local/lib/node_modules/npm/node_modules/node-gyp/gyp/pylib/packaging/version.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (6/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "packaging.version",
        "obj": "_cmpkey",
        "line": 503,
        "column": 0,
        "endLine": 503,
        "endColumn": 11,
        "path": "/usr/local/lib/node_modules/npm/node_modules/node-gyp/gyp/pylib/packaging/version.py",
        "symbol": "too-many-positional-arguments",
        "message": "Too many positional arguments (6/5)",
        "message-id": "R0917"
    }
]
[
    {
        "type": "convention",
        "module": "packaging",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "/usr/local/lib/node_modules/npm/node_modules/node-gyp/gyp/pylib/packaging/__init__.py",
        "symbol": "missing-module-docstring",
        "message": "Missing module docstring",
        "message-id": "C0114"
    },
    {
        "type": "convention",
        "module": "packaging",
        "obj": "",
        "line": 15,
        "column": 16,
        "endLine": 15,
        "endColumn": 25,
        "path": "/usr/local/lib/node_modules/npm/node_modules/node-gyp/gyp/pylib/packaging/__init__.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    }
]
[
    {
        "type": "convention",
        "module": "packaging._parser",
        "obj": "Node",
        "line": 13,
        "column": 0,
        "endLine": 13,
        "endColumn": 10,
        "path": "/usr/local/lib/node_modules/npm/node_modules/node-gyp/gyp/pylib/packaging/_parser.py",
        "symbol": "missing-class-docstring",
        "message": "Missing class docstring",
        "message-id": "C0115"
    },
    {
        "type": "convention",
        "module": "packaging._parser",
        "obj": "Node.serialize",
        "line": 23,
        "column": 4,
        "endLine": 23,
        "endColumn": 17,
        "path": "/usr/local/lib/node_modules/npm/node_modules/node-gyp/gyp/pylib/packaging/_parser.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "packaging._parser",
        "obj": "Variable",
        "line": 27,
        "column": 0,
        "endLine": 27,
        "endColumn": 14,
        "path": "/usr/local/lib/node_modules/npm/node_modules/node-gyp/gyp/pylib/packaging/_parser.py",
        "symbol": "missing-class-docstring",
        "message": "Missing class docstring",
        "message-id": "C0115"
    },
    {
        "type": "refactor",
        "module": "packaging._parser",
        "obj": "Variable",
        "line": 27,
        "column": 0,
        "endLine": 27,
        "endColumn": 14,
        "path": "/usr/local/lib/node_modules/npm/node_modules/node-gyp/gyp/pylib/packaging/_parser.py",
        "symbol": "too-few-public-methods",
        "message": "Too few public methods (1/2)",
        "message-id": "R0903"
    },
    {
        "type": "convention",
        "module": "packaging._parser",
        "obj": "Value",
        "line": 32,
        "column": 0,
        "endLine": 32,
        "endColumn": 11,
        "path": "/usr/local/lib/node_modules/npm/node_modules/node-gyp/gyp/pylib/packaging/_parser.py",
        "symbol": "missing-class-docstring",
        "message": "Missing class docstring",
        "message-id": "C0115"
    },
    {
        "type": "refactor",
        "module": "packaging._parser",
        "obj": "Value",
        "line": 32,
        "column": 0,
        "endLine": 32,
        "endColumn": 11,
        "path": "/usr/local/lib/node_modules/npm/node_modules/node-gyp/gyp/pylib/packaging/_parser.py",
        "symbol": "too-few-public-methods",
        "message": "Too few public methods (1/2)",
        "message-id": "R0903"
    },
    {
        "type": "convention",
        "module": "packaging._parser",
        "obj": "Op",
        "line": 37,
        "column": 0,
        "endLine": 37,
        "endColumn": 8,
        "path": "/usr/local/lib/node_modules/npm/node_modules/node-gyp/gyp/pylib/packaging/_parser.py",
        "symbol": "missing-class-docstring",
        "message": "Missing class docstring",
        "message-id": "C0115"
    },
    {
        "type": "refactor",
        "module": "packaging._parser",
        "obj": "Op",
        "line": 37,
        "column": 0,
        "endLine": 37,
        "endColumn": 8,
        "path": "/usr/local/lib/node_modules/npm/node_modules/node-gyp/gyp/pylib/packaging/_parser.py",
        "symbol": "too-few-public-methods",
        "message": "Too few public methods (1/2)",
        "message-id": "R0903"
    },
    {
        "type": "convention",
        "module": "packaging._parser",
        "obj": "ParsedRequirement",
        "line": 52,
        "column": 0,
        "endLine": 52,
        "endColumn": 23,
        "path": "/usr/local/lib/node_modules/npm/node_modules/node-gyp/gyp/pylib/packaging/_parser.py",
        "symbol": "missing-class-docstring",
        "message": "Missing class docstring",
        "message-id": "C0115"
    },
    {
        "type": "convention",
        "module": "packaging._parser",
        "obj": "parse_requirement",
        "line": 63,
        "column": 0,
        "endLine": 63,
        "endColumn": 21,
        "path": "/usr/local/lib/node_modules/npm/node_modules/node-gyp/gyp/pylib/packaging/_parser.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "packaging._parser",
        "obj": "parse_marker",
        "line": 254,
        "column": 0,
        "endLine": 254,
        "endColumn": 16,
        "path": "/usr/local/lib/node_modules/npm/node_modules/node-gyp/gyp/pylib/packaging/_parser.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "refactor",
        "module": "packaging._parser",
        "obj": "_parse_marker_var",
        "line": 316,
        "column": 4,
        "endLine": 323,
        "endColumn": 9,
        "path": "/usr/local/lib/node_modules/npm/node_modules/node-gyp/gyp/pylib/packaging/_parser.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"elif\" after \"return\", remove the leading \"el\" from \"elif\"",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "packaging._parser",
        "obj": "_parse_marker_var",
        "line": 312,
        "column": 0,
        "endLine": 312,
        "endColumn": 21,
        "path": "/usr/local/lib/node_modules/npm/node_modules/node-gyp/gyp/pylib/packaging/_parser.py",
        "symbol": "inconsistent-return-statements",
        "message": "Either all return statements in a function should return an expression, or none of them should.",
        "message-id": "R1710"
    },
    {
        "type": "convention",
        "module": "packaging._parser",
        "obj": "process_env_var",
        "line": 326,
        "column": 0,
        "endLine": 326,
        "endColumn": 19,
        "path": "/usr/local/lib/node_modules/npm/node_modules/node-gyp/gyp/pylib/packaging/_parser.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "refactor",
        "module": "packaging._parser",
        "obj": "process_env_var",
        "line": 327,
        "column": 4,
        "endLine": 333,
        "endColumn": 32,
        "path": "/usr/local/lib/node_modules/npm/node_modules/node-gyp/gyp/pylib/packaging/_parser.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "packaging._parser",
        "obj": "process_env_var",
        "line": 328,
        "column": 8,
        "endLine": 329,
        "endColumn": 45,
        "path": "/usr/local/lib/node_modules/npm/node_modules/node-gyp/gyp/pylib/packaging/_parser.py",
        "symbol": "consider-using-in",
        "message": "Consider merging these comparisons with 'in' by using 'env_var in ('platform_python_implementation', 'python_implementation')'. Use a set instead if elements are hashable.",
        "message-id": "R1714"
    },
    {
        "type": "convention",
        "module": "packaging._parser",
        "obj": "process_python_str",
        "line": 336,
        "column": 0,
        "endLine": 336,
        "endColumn": 22,
        "path": "/usr/local/lib/node_modules/npm/node_modules/node-gyp/gyp/pylib/packaging/_parser.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "refactor",
        "module": "packaging._parser",
        "obj": "_parse_marker_op",
        "line": 345,
        "column": 4,
        "endLine": 359,
        "endColumn": 9,
        "path": "/usr/local/lib/node_modules/npm/node_modules/node-gyp/gyp/pylib/packaging/_parser.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"elif\" after \"return\", remove the leading \"el\" from \"elif\"",
        "message-id": "R1705"
    }
]
[
    {
        "type": "convention",
        "module": "packaging.utils",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "/usr/local/lib/node_modules/npm/node_modules/node-gyp/gyp/pylib/packaging/utils.py",
        "symbol": "missing-module-docstring",
        "message": "Missing module docstring",
        "message-id": "C0114"
    },
    {
        "type": "convention",
        "module": "packaging.utils",
        "obj": "canonicalize_name",
        "line": 43,
        "column": 0,
        "endLine": 43,
        "endColumn": 21,
        "path": "/usr/local/lib/node_modules/npm/node_modules/node-gyp/gyp/pylib/packaging/utils.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "packaging.utils",
        "obj": "is_normalized_name",
        "line": 51,
        "column": 0,
        "endLine": 51,
        "endColumn": 22,
        "path": "/usr/local/lib/node_modules/npm/node_modules/node-gyp/gyp/pylib/packaging/utils.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "packaging.utils",
        "obj": "parse_wheel_filename",
        "line": 103,
        "column": 0,
        "endLine": 103,
        "endColumn": 24,
        "path": "/usr/local/lib/node_modules/npm/node_modules/node-gyp/gyp/pylib/packaging/utils.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "packaging.utils",
        "obj": "parse_sdist_filename",
        "line": 146,
        "column": 0,
        "endLine": 146,
        "endColumn": 24,
        "path": "/usr/local/lib/node_modules/npm/node_modules/node-gyp/gyp/pylib/packaging/utils.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    }
]
[
    {
        "type": "warning",
        "module": "packaging.requirements",
        "obj": "",
        "line": 28,
        "column": 5,
        "endLine": null,
        "endColumn": null,
        "path": "/usr/local/lib/node_modules/npm/node_modules/node-gyp/gyp/pylib/packaging/requirements.py",
        "symbol": "fixme",
        "message": "TODO: Can we test whether something is contained within a requirement?",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "packaging.requirements",
        "obj": "",
        "line": 31,
        "column": 5,
        "endLine": null,
        "endColumn": null,
        "path": "/usr/local/lib/node_modules/npm/node_modules/node-gyp/gyp/pylib/packaging/requirements.py",
        "symbol": "fixme",
        "message": "TODO: Can we normalize the name and extra name?",
        "message-id": "W0511"
    },
    {
        "type": "convention",
        "module": "packaging.requirements",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "/usr/local/lib/node_modules/npm/node_modules/node-gyp/gyp/pylib/packaging/requirements.py",
        "symbol": "missing-module-docstring",
        "message": "Missing module docstring",
        "message-id": "C0114"
    }
]
[
    {
        "type": "convention",
        "module": "packaging._structures",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "/usr/local/lib/node_modules/npm/node_modules/node-gyp/gyp/pylib/packaging/_structures.py",
        "symbol": "missing-module-docstring",
        "message": "Missing module docstring",
        "message-id": "C0114"
    },
    {
        "type": "convention",
        "module": "packaging._structures",
        "obj": "InfinityType",
        "line": 6,
        "column": 0,
        "endLine": 6,
        "endColumn": 18,
        "path": "/usr/local/lib/node_modules/npm/node_modules/node-gyp/gyp/pylib/packaging/_structures.py",
        "symbol": "missing-class-docstring",
        "message": "Missing class docstring",
        "message-id": "C0115"
    },
    {
        "type": "convention",
        "module": "packaging._structures",
        "obj": "NegativeInfinityType",
        "line": 35,
        "column": 0,
        "endLine": 35,
        "endColumn": 26,
        "path": "/usr/local/lib/node_modules/npm/node_modules/node-gyp/gyp/pylib/packaging/_structures.py",
        "symbol": "missing-class-docstring",
        "message": "Missing class docstring",
        "message-id": "C0115"
    }
]
[
    {
        "type": "convention",
        "module": "packaging.markers",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "/usr/local/lib/node_modules/npm/node_modules/node-gyp/gyp/pylib/packaging/markers.py",
        "symbol": "missing-module-docstring",
        "message": "Missing module docstring",
        "message-id": "C0114"
    },
    {
        "type": "refactor",
        "module": "packaging.markers",
        "obj": "_format_marker",
        "line": 88,
        "column": 8,
        "endLine": 91,
        "endColumn": 46,
        "path": "/usr/local/lib/node_modules/npm/node_modules/node-gyp/gyp/pylib/packaging/markers.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "convention",
        "module": "packaging.markers",
        "obj": "format_full_version",
        "line": 167,
        "column": 0,
        "endLine": 167,
        "endColumn": 23,
        "path": "/usr/local/lib/node_modules/npm/node_modules/node-gyp/gyp/pylib/packaging/markers.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "packaging.markers",
        "obj": "format_full_version",
        "line": 168,
        "column": 14,
        "endLine": 168,
        "endColumn": 45,
        "path": "/usr/local/lib/node_modules/npm/node_modules/node-gyp/gyp/pylib/packaging/markers.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "packaging.markers",
        "obj": "default_environment",
        "line": 175,
        "column": 0,
        "endLine": 175,
        "endColumn": 23,
        "path": "/usr/local/lib/node_modules/npm/node_modules/node-gyp/gyp/pylib/packaging/markers.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "packaging.markers",
        "obj": "Marker",
        "line": 193,
        "column": 0,
        "endLine": 193,
        "endColumn": 12,
        "path": "/usr/local/lib/node_modules/npm/node_modules/node-gyp/gyp/pylib/packaging/markers.py",
        "symbol": "missing-class-docstring",
        "message": "Missing class docstring",
        "message-id": "C0115"
    }
]
[
    {
        "type": "convention",
        "module": "packaging._manylinux",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "/usr/local/lib/node_modules/npm/node_modules/node-gyp/gyp/pylib/packaging/_manylinux.py",
        "symbol": "missing-module-docstring",
        "message": "Missing module docstring",
        "message-id": "C0114"
    },
    {
        "type": "convention",
        "module": "packaging._manylinux",
        "obj": "_glibc_version_string_ctypes",
        "line": 99,
        "column": 8,
        "endLine": 99,
        "endColumn": 21,
        "path": "/usr/local/lib/node_modules/npm/node_modules/node-gyp/gyp/pylib/packaging/_manylinux.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (ctypes)",
        "message-id": "C0415"
    },
    {
        "type": "convention",
        "module": "packaging._manylinux",
        "obj": "_is_compatible",
        "line": 177,
        "column": 8,
        "endLine": 177,
        "endColumn": 25,
        "path": "/usr/local/lib/node_modules/npm/node_modules/node-gyp/gyp/pylib/packaging/_manylinux.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (_manylinux)",
        "message-id": "C0415"
    },
    {
        "type": "refactor",
        "module": "packaging._manylinux",
        "obj": "_is_compatible",
        "line": 171,
        "column": 0,
        "endLine": 171,
        "endColumn": 18,
        "path": "/usr/local/lib/node_modules/npm/node_modules/node-gyp/gyp/pylib/packaging/_manylinux.py",
        "symbol": "too-many-return-statements",
        "message": "Too many return statements (8/6)",
        "message-id": "R0911"
    },
    {
        "type": "convention",
        "module": "packaging._manylinux",
        "obj": "platform_tags",
        "line": 245,
        "column": 22,
        "endLine": 245,
        "endColumn": 39,
        "path": "/usr/local/lib/node_modules/npm/node_modules/node-gyp/gyp/pylib/packaging/_manylinux.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    }
]
